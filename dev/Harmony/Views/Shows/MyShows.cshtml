@model IEnumerable<Harmony.Models.Show>

@{
    ViewBag.Title = "MyShows";
}

@using Harmony.Models;
@using Harmony.DAL;
@using Microsoft.AspNet.Identity;
@{
    HarmonyContext db = new HarmonyContext();
    string identityID = User.Identity.GetUserId();
    User self = db.Users.Where(u => u.ASPNetIdentityID == identityID).FirstOrDefault();
}
<head>
    <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
    <script type="text/javascript">
        window.onload = function () {

        var chart = new CanvasJS.Chart("chartContainer", {
	        animationEnabled: true,
	        title: {
		        text: "Your Progress"
	        },
	        axisY: {
		        includeZero: true
	        },
	        toolTip: {
		        shared: true
	        },
	        data: [{
		        type: "line",
		        name: "Shows Played",
		        showInLegend: true,
		        dataPoints: @Html.Raw(ViewBag.DataPoints1)
	        }, {
		        type: "line",
		        name: "Shows Booked",
		        showInLegend: true,
		        dataPoints: @Html.Raw(ViewBag.DataPoints2)
	        }]
        });
        chart.render();

        }
    </script>
</head>


<div class="col-10 offset-1">
    <div id="chartContainer" style="height: 370px; width: 100%; margin: 60px 0px 60px 0px;"></div>
</div>

<div class="container black-font">
    <div class="row" id="myprofile">
        <div class="col-md-12">
            <h3>Upcoming Shows</h3>
            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Venue.VenueName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Title)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.StartDateTime)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EndDateTime)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Status)
                    </th>
                    <th></th>
                </tr>
                @foreach (var item in Model)
                {
                    if (item.StartDateTime > DateTime.Now && item.Status != "Canceled" && item.Status != "Declined")
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Venue.VenueName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Title)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.StartDateTime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.EndDateTime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>
                            <td>
                                @Html.ActionLink("Details", "Details", new { id = item.ID })
                            </td>
                            <td>
                                @using (Html.BeginForm("Accept", "Shows", new { id = item.ID }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                                {
                                    if (item.Status == "Pending" && item.ShowOwnerID != self.ID)
                                    {
                                        <button type="submit" class="btn btn-sm btn-dark">Accept</button>
                                    }
                                }
                            </td>
                            <td>
                                @using (Html.BeginForm("Decline", "Shows", new { id = item.ID }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                                {
                                    if (item.Status == "Pending" && item.ShowOwnerID != self.ID)
                                    {
                                        <button type="submit" class="btn btn-sm btn-danger">Decline</button>
                                    }
                                }
                            </td>
                        </tr>
                    }

                }
            </table>
            <hr />
            <br />
            <h3>Show History</h3>
            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Venue.VenueName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Title)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.StartDateTime)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EndDateTime)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Status)
                    </th>
                    <th></th>
                </tr>
                @foreach (var item in Model)
                {
                    if (item.EndDateTime < DateTime.Now && item.Status == "Finished")
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Venue.VenueName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Title)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.StartDateTime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.EndDateTime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>
                            <td>
                                @Html.ActionLink("Details", "Details", new { id = item.ID })
                            </td>

                            @if (User.IsInRole("Musician") && item.User_Show.Select(us => us.MusicianRated).First() == false)
                            {
                                <td>@Html.ActionLink("Rate", "RateUser", new { id = item.ID })</td>
                            }
                            @if (User.IsInRole("VenueOwner") && item.User_Show.Select(us => us.VenueRated).First() == false)
                            {
                                <td>@Html.ActionLink("Rate", "RateUser", new { id = item.ID })</td>
                            }
                        </tr>
                    }
                }
            </table>
            <hr />
            <br />
            <h3>Canceled and Declined Show</h3>
            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Venue.VenueName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Title)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.StartDateTime)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EndDateTime)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Status)
                    </th>
                    <th></th>
                    @foreach (var item in Model)
                    {
                        if (item.Status == "Canceled" || item.Status == "Declined")
                        {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Venue.VenueName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Title)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.StartDateTime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.EndDateTime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>
                            <td>
                                @Html.ActionLink("Details", "Details", new { id = item.ID })
                            </td>
                        </tr>
                    }
                }
                </table>
                <hr />
            </div>
        </div>
    </div>
